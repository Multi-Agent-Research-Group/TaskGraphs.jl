[ logger ](cbs.jl-31): CBS: iter 0 - node Int64[] - Current paths:
   T:  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31
   1: [1   1   1   1   1   1   1   1   1   1   1   2   3   4   8   7   6   6   6   5   9   13  9   5   1   2   3   4   8   12  16  15  ]
   2: [13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  14  14  14  14  14  14  14  14  14  14  14  ]

[ logger ](cbs.jl-36): CBS: constraints in node Int64[]:

[ logger ](cbs.jl-50): Optimal solution found by CBS! Cost = (31.0, 0.0, 20.0, 0.0, -62.0)
[ logger ](pc_tapf_solvers.jl-558): NBS: Reached 1-iteration limit.
[ logger ](replanning.jl-627): Stage 2 - route planner iterations: 0
[ logger ](replanning.jl-620): REPLANNING: Stage 3
Academic license - for non-commercial use only
Academic license - for non-commercial use only
[ logger ](task_assignment_solvers.jl-1117): Assignment: Adding edges
    GO(1,3->16) → COLLECT(1,4,16)
    GO(1,11->9) → COLLECT(1,5,9)
    GO(1,15->8) → COLLECT(1,6,8)
    GO(1,11->7) → COLLECT(1,7,7)

[ logger ](path_planning.jl-433): moved 12 to closed set, moved [10] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 10 to closed set, moved [13] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 5 to closed set, moved Int64[] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 32 to closed set, moved [18] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 18 to closed set, moved Int64[] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 33 to closed set, moved [17] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 17 to closed set, moved Int64[] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 3 to closed set, moved [6] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 6 to closed set, moved [1] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 1 to closed set, moved [11] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](path_planning.jl-433): moved 11 to closed set, moved [14] to active set
[ logger ](path_planning.jl-434): cache.tF[v] = [18, 7, 0, 6, 0, 10, 7, 10, 7, 2, 26, 0, 6, 26, 16, 20, 0, 0, 16, 14, 16, 16, 17, 10, 12, 12, 14, 17, 20, 20, 20, 0, 0]
[ logger ](pc_tapf_solvers.jl-334): cache: PlanningCache:
    closed_set:   Set([12, 18, 32, 11, 10, 17, 6, 3, 5, 33, 1])
    active_set:   Set([13, 14])
    node_queue:   PriorityQueue(14 => (1, Inf))
               v:      1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33
    t0:           [   10    7    0    6    0    0    7    7    6    0   18    0    2   26   16   20    0    0   16   14   14   16   16   10   10   12   12   17   17   20   20    0    0]
    tF:           [   18    7    0    6    0   10    7   10    7    2   26    0    6   26   16   20    0    0   16   14   16   16   17   10   12   12   14   17   20   20   20    0    0]
    slack:        [  Inf  0.0  Inf  0.0  6.0  Inf  0.0  Inf  0.0  0.0  Inf  0.0  0.0  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf  Inf]
                  [  Inf  0.0  Inf  0.0  6.0  Inf  Inf  0.0  0.0  0.0  Inf  0.0  0.0  Inf  1.0  0.0 14.0 10.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  Inf 10.0 14.0]
    local_slack:  [  0.0  0.0  0.0  0.0  6.0  0.0  Inf  0.0  0.0  0.0  0.0  0.0  0.0  Inf  0.0  Inf 14.0 10.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  Inf  0.0  0.0]
                  [  0.0  0.0  0.0  0.0  6.0  0.0  Inf  0.0  0.0  0.0  0.0  0.0  0.0  Inf  0.0  Inf 14.0 10.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  Inf  0.0  0.0]
active task nodes:
    v =   13 => GO(1,3->16)
    v =   14 => GO(2,14->-1)
route_plan: LowLevelSolution:
   T:  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
   1: [1   1   1   1   1   1   1   1   1   1   1   2   3   4   8   7   6   6   6   5   9   13  9   5   1   2   15  ]
   2: [13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  13  14  14  14  14  14  14  ]


[ logger ](pc_tapf_solvers.jl-335): ISPS:
    schedule_node: GO(1,3->16)
    cache.tF[v]: 6
    maximum(env.cache.tF): 26
