object_intervals = [[32, 45], [9, 34], [0, 24], [0, 16], [31, 33], [0, 10], [0, 32], [0, 27], [0, 26], [44, 48]]
time = 0.27100397
num_A_star_iterations = 0
optimal = true
num_assignment_iterations = 1
object_paths = [[365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 365, 364, 363, 362, 380, 400, 426, 452, 478, 502, 520, 540, 539, 539, 539, 539, 539], [221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 239, 257, 258, 259, 260, 261, 262, 263, 264, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 328, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354], [240, 240, 240, 240, 240, 240, 240, 240, 240, 222, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230], [384, 384, 384, 366, 344, 318, 292, 266, 265, 264, 263, 243, 225, 224, 223, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222], [532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514], [136, 136, 136, 136, 136, 136, 136, 136, 135, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111], [75, 75, 75, 75, 75, 75, 75, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 86, 104, 126, 152, 178, 204, 226, 244, 266, 292, 318, 344, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366], [81, 81, 81, 81, 81, 81, 81, 81, 81, 55, 56, 57, 58, 59, 60, 61, 62, 63, 63, 64, 65, 66, 67, 68, 69, 70, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90], [276, 276, 276, 276, 276, 276, 276, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 289, 315, 341, 365, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 383], [513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 512, 511, 510, 510]]
total_A_star_iterations = 1220
max_CBS_iterations = 0
LIMIT_assignment_iterations = 50
feasible = true
l3_verbosity = 1
edge_list = [[2, 1], [8, 2], [7, 3], [10, 4], [3, 5], [5, 6], [4, 7], [13, 8], [1, 9], [17, 10]]
time_limit = 150.0
robot_paths = [[423, 397, 379, 361, 335, 309, 283, 257, 239, 221, 239, 257, 258, 259, 260, 261, 262, 263, 264, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 328, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354, 354], [187, 161, 135, 111, 93, 73, 74, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 86, 104, 126, 152, 178, 204, 226, 244, 266, 292, 318, 344, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366], [102, 101, 100, 120, 146, 172, 198, 222, 240, 222, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230], [481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 514, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 514, 496, 495, 494, 493, 513, 513, 513, 513, 513, 513, 513, 513, 512, 511, 510], [344, 366, 384, 366, 344, 318, 292, 266, 265, 264, 263, 243, 225, 224, 223, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222], [289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 289, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288], [390, 372, 352, 326, 300, 274, 275, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 289, 315, 341, 365, 383, 365, 365, 365, 365, 365, 365, 365, 364, 363, 362, 380, 400, 426, 452, 478, 502, 520, 540, 539, 539, 539, 539], [35, 34, 33, 32, 31, 30, 29, 55, 81, 55, 56, 57, 58, 59, 60, 61, 62, 63, 63, 64, 65, 66, 67, 68, 69, 70, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90], [576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576], [235, 217, 191, 165, 139, 138, 137, 136, 135, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111]]
max_A_star_iterations = 148
LIMIT_A_star_iterations = 8000
l4_verbosity = 0
total_assignment_iterations = 0
optimality_gap = 0
l2_verbosity = 2
num_CBS_iterations = 0
size_i = 20
l1_verbosity = 2
LIMIT_CBS_iterations = 100
best_cost = [47.0, 0.0, 201.0, 0.0]
total_CBS_iterations = 0
DEBUG = false
cost = [47.0, 0.0, 201.0, 0.0]
verbosity = 0
size_j = 10
